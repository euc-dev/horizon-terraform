name: Build Provider
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build Provider
        run: |
          echo "Building provider for OS: ${{ matrix.os }}"
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            go build -o terraform-provider-view.exe
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            GOOS=darwin GOARCH=amd64 go build -o terraform-provider-view
          else
            GOOS=linux GOARCH=amd64 go build -o terraform-provider-view
          fi
        shell: bash
        working-directory: ./src
          
      - name: Compress Build Artifacts on Linux and macOS
        if: runner.os != 'Windows'
        run: |
          cd src
          zip -r -9 terraform-provider-view-${{ matrix.os }}.zip terraform-provider-view
          mv terraform-provider-view-${{ matrix.os }}.zip ../
        shell: bash

      - name: Compress Build Artifacts on Windows
        if: runner.os == 'Windows'
        run: |
          Compress-Archive -Path src\terraform-provider-view.exe -DestinationPath terraform-provider-view-${{ matrix.os }}.zip
        shell: pwsh

      - name: Upload Compressed Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: terraform-provider-horizonview-${{ matrix.os }}
          path: terraform-provider-horizonview-${{ matrix.os }}.zip
          
      - name: Test Code
        working-directory: ./src
        run: go test -o .terraform-provider-horizonview -json > TestResults-${{ matrix.os }}.json
        shell: bash

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: Go-results-${{ matrix.os }}
          path: src/TestResults-${{ matrix.os }}.json
